// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                           Int                  @id @default(autoincrement())
  name                         String?
  email                        String               @unique
  username                     String               @unique
  password                     String
  createdAt                    DateTime             @default(now()) @map("created_at")
  pictureUrl                   String?              @map("picture_url")
  online                       Boolean              @default(false)
  dialog_participants_contains Dialog_participant[] @relation("UserDialogs")
  dialog_participants_in       Dialog_participant[] @relation("UserReferences")
  message                      Message[]
}

model Dialog {
  id                  Int                  @id @default(autoincrement())
  name                String?
  pictureUrl          String?              @map("picture_url")
  isGroup             Boolean              @default(false) @map("is_group")
  sentTime            DateTime             @default(now()) @map("sent_time")
  lastMessage         String?              @map("last_message")
  messages            Message[]
  dialog_participants Dialog_participant[]
}

model Dialog_participant {
  user      User   @relation("UserDialogs", fields: [userId], references: [id])
  userRef   User   @relation("UserReferences", fields: [userRefId], references: [id])
  userRefId Int    @map("user_ref_id")
  dialog    Dialog @relation(fields: [dialogId], references: [id])
  dialogId  Int    @map("dialog_id")

  userId            Int @map("user_id")
  notificationCount Int @default(0) @map("notification_count")

  @@id([dialogId, userId])
}

model Message {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now()) @map("created_at")

  sender   User @relation(fields: [senderId], references: [id])
  senderId Int  @map("sender_id")

  dialog   Dialog @relation(fields: [dialogId], references: [id])
  dialogId Int    @map("dialog_id")

  unreadById Int[]  @map("unread_by_id")
  status     Status
  type       Type
}

enum Type {
  TEXT
  IMAGE
  FILE
}

enum Status {
  SENT
  FAILED
  READ
}
